{"version":3,"file":"static/js/387.776bdffe.chunk.js","mappings":"+SAEMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,qCAAwCD,IADjC,cACxBG,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,qDAKhBC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCAC+BM,EAD/B,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACbO,EADa,oBACCR,EADD,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,sGC7BfO,EAAWC,EAAAA,GAAAA,GAAH,6CAGRC,EAAWD,EAAAA,GAAAA,GAAH,0D,oCCgCrB,EAhCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKN,OAJFE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBQ,GAASG,MAAK,SAAAhB,GAAI,OAAIY,EAAQZ,EAAKW,KAAjB,GACnC,GAAE,CAACE,KAGE,SAACN,EAAD,UACDI,EAAKM,OAAS,EACXN,EAAKO,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,UAACZ,EAAD,YACE,gBACEa,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,wBAAKP,KACL,wCAAgBE,OAbHjB,EADR,IAiBT,6CAGT,C","sources":["api/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'af0d5f243de6f7a5bfa482911cb42a9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n   `movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px;\n  padding: 6px;\n`;\n","import { CastList, CastItem } from './Cast.styled';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../api/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n    \n    return (\n        <CastList>\n      {cast.length > 0\n        ? cast.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={160}\n              />\n              <h3>{name}</h3>\n              <p> Character: {character}</p>\n            </CastItem>\n          ))\n        : \"Sorry, we don't have information about it\"}\n    </CastList>\n  );\n};\n\nexport default Cast;"],"names":["KEY","axios","getTrendingMovie","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","CastList","styled","CastItem","useState","cast","setCast","movieId","useParams","useEffect","then","length","map","name","profile_path","character","src","alt","loading","width","height"],"sourceRoot":""}